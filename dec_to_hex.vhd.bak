library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity dec_to_hex is
port(hex_digit : in std_logic_vector (3 downto 0);
	 segs : out std_logic_vector(6 downto 0));
end dec_to_hex;

architecture arch of dec_to_hex is

	signal segment_data : std_logic_vector(6 downto 0);
begin

process(hex_digit)
begin
	case hex_digit IS
		when "0000" =>
			segment_data <= "1111110";
		when "0001" =>
			segment_data <= "0110000";
		when "0010" =>
			segment_data <= "1101101";
		when "0011" =>
			segment_data <= "1111001";
		when "0100" =>
			segment_data <= "0110011";
		when "0101" =>
			segment_data <= "1011011";
		when "0110" =>
			segment_data <= "1011111";
		when "0111" =>
			segment_data <= "1110000";
		when "1000" =>
			segment_data <= "1111111";
		when "1001" =>
			segment_data <= "1110011";
		when "1010" =>
			segment_data <= "1110111";
		when "1011" =>
			segment_data <= "0011111";
		when "1100" =>
			segment_data <= "1001110";
		when "1101" =>
			segment_data <= "0111101";
		when "1110" =>
			segment_data <= "1001111";
		when "1111" =>
			segment_data <= "1000111";
end case;
end process;

segs(0) <= not segment_data(6);
segs(1) <= not segment_data(5);
segs(2) <= not segment_data(4);
segs(3) <= not segment_data(3);
segs(4) <= not segment_data(2);
segs(5) <= not segment_data(1);
segs(6) <= not segment_data(0);

end arch;